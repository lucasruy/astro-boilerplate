name: ðŸ“¦ Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      PUBLIC_SITE_URL: ${{ secrets.PUBLIC_SITE_URL }}
      NODE_ENV: production

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install dependencies
        run: pnpm install

      - name: Generate robots.txt
        run: pnpm generate-robots

      - name: Build project
        run: pnpm build

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy to S3
        run: |
          aws s3 sync ./dist s3://${{ secrets.AWS_S3_BUCKET }} \
            --delete \
            --cache-control "public,max-age=31536000,immutable" \
            --content-security-policy "default-src 'self'; img-src 'self' data: https:; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline';" \
            --strict-transport-security "max-age=31536000; includeSubDomains; preload" \
            --x-content-type-options "nosniff" \
            --x-frame-options "DENY" \
            --referrer-policy "strict-origin-when-cross-origin"

      - name: Invalidate CloudFront
        if: success()
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ secrets.AWS_CLOUDFRONT_DISTRIBUTION_ID }} \
            --paths "/*"
